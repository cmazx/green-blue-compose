version: '3.7'

services:
  traefik:
    image: traefik:2.6.3
    ports:
      - '80:80'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.my-app.rule=Host(`${TRAEFIK_HOST}`)'
      - 'traefik.http.services.my-app.loadbalancer.server.port=8080'
    networks:
      - ${TRAEFIK_NETWORK}
    command:
      - '--api.dashboard=true'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.network=${TRAEFIK_NETWORK}'
      - '--providers.docker.exposedByDefault=false'
      - '--entrypoints.web.address=:80'

  green: &green
    build:
      context: .
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${TRAEFIK_NETWORK}"
      - "traefik.http.services.gbservice.loadbalancer.server.port=80"
      - "traefik.http.services.gbservice.loadbalancer.healthCheck.path=/health"
      - "traefik.http.services.gbservice.loadbalancer.healthCheck.interval=${TRAEFIK_HEALTH_INTERVAL}"
      - "traefik.http.services.gbservice.loadbalancer.healthCheck.port=80"
      - "traefik.http.services.gbservice.loadbalancer.healthCheck.timeout=2s"
      - "traefik.http.services.gbservice.loadbalancer.responseforwarding.flushinterval=-1"
      - "traefik.http.routers.gbservice.entrypoints=web"
      - "traefik.http.routers.gbservice.rule=Host(`${DOMAIN}`)"
    environment:
      TRAEFIK_HEALTH_INTERVAL: ${TRAEFIK_HEALTH_INTERVAL}
    networks:
      - default
      - ${TRAEFIK_NETWORK}
  blue:
    <<: *green

# db for example of non-redeploying container
  db:
    image: postgres:latest
    networks:
      - default
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 3535
      POSTGRES_DB: db
      POSTGRES_USER: db
      POSTGRES_PASSWORD: db
networks:
  traefik:
    name: ${TRAEFIK_NETWORK}
    external: true
